<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zm.village.ssm.mapper.RelLandInfMapper">
  <resultMap id="BaseResultMap" type="zm.village.dao.RelLandInf">
    <id column="rel_land_id" jdbcType="INTEGER" property="relLandId" />
    <result column="rel_land_type" jdbcType="INTEGER" property="relLandType" />
    <result column="rel_land_crop_type" jdbcType="INTEGER" property="relLandCropType" />
    <result column="rel_land_crop_price" jdbcType="DOUBLE" property="relLandCropPrice" />
    <result column="rel_land_crop_startTime" jdbcType="DATE" property="relLandCropStarttime" />
    <result column="rel_land_crop_endTime" jdbcType="DATE" property="relLandCropEndtime" />
  </resultMap>
  <sql id="Base_Column_List">
    rel_land_id, rel_land_type, rel_land_crop_type, rel_land_crop_price, rel_land_crop_startTime, 
    rel_land_crop_endTime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rel_land_inf
    where rel_land_id = #{relLandId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rel_land_inf
    where rel_land_id = #{relLandId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zm.village.dao.RelLandInf">
    insert into rel_land_inf (rel_land_id, rel_land_type, rel_land_crop_type, 
      rel_land_crop_price, rel_land_crop_startTime, rel_land_crop_endTime
      )
    values (#{relLandId,jdbcType=INTEGER}, #{relLandType,jdbcType=INTEGER}, #{relLandCropType,jdbcType=INTEGER}, 
      #{relLandCropPrice,jdbcType=DOUBLE}, #{relLandCropStarttime,jdbcType=DATE}, #{relLandCropEndtime,jdbcType=DATE}
      )
  </insert>
  <insert id="insertSelective" parameterType="zm.village.dao.RelLandInf">
    insert into rel_land_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relLandId != null">
        rel_land_id,
      </if>
      <if test="relLandType != null">
        rel_land_type,
      </if>
      <if test="relLandCropType != null">
        rel_land_crop_type,
      </if>
      <if test="relLandCropPrice != null">
        rel_land_crop_price,
      </if>
      <if test="relLandCropStarttime != null">
        rel_land_crop_startTime,
      </if>
      <if test="relLandCropEndtime != null">
        rel_land_crop_endTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relLandId != null">
        #{relLandId,jdbcType=INTEGER},
      </if>
      <if test="relLandType != null">
        #{relLandType,jdbcType=INTEGER},
      </if>
      <if test="relLandCropType != null">
        #{relLandCropType,jdbcType=INTEGER},
      </if>
      <if test="relLandCropPrice != null">
        #{relLandCropPrice,jdbcType=DOUBLE},
      </if>
      <if test="relLandCropStarttime != null">
        #{relLandCropStarttime,jdbcType=DATE},
      </if>
      <if test="relLandCropEndtime != null">
        #{relLandCropEndtime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zm.village.dao.RelLandInf">
    update rel_land_inf
    <set>
      <if test="relLandType != null">
        rel_land_type = #{relLandType,jdbcType=INTEGER},
      </if>
      <if test="relLandCropType != null">
        rel_land_crop_type = #{relLandCropType,jdbcType=INTEGER},
      </if>
      <if test="relLandCropPrice != null">
        rel_land_crop_price = #{relLandCropPrice,jdbcType=DOUBLE},
      </if>
      <if test="relLandCropStarttime != null">
        rel_land_crop_startTime = #{relLandCropStarttime,jdbcType=DATE},
      </if>
      <if test="relLandCropEndtime != null">
        rel_land_crop_endTime = #{relLandCropEndtime,jdbcType=DATE},
      </if>
    </set>
    where rel_land_id = #{relLandId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zm.village.dao.RelLandInf">
    update rel_land_inf
    set rel_land_type = #{relLandType,jdbcType=INTEGER},
      rel_land_crop_type = #{relLandCropType,jdbcType=INTEGER},
      rel_land_crop_price = #{relLandCropPrice,jdbcType=DOUBLE},
      rel_land_crop_startTime = #{relLandCropStarttime,jdbcType=DATE},
      rel_land_crop_endTime = #{relLandCropEndtime,jdbcType=DATE}
    where rel_land_id = #{relLandId,jdbcType=INTEGER}
  </update>
</mapper>