<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zm.village.web.mapper.EvaInfMapper">
  <resultMap id="BaseResultMap" type="zm.village.dao.Evaluate">
    <id column="eva_id" jdbcType="INTEGER" property="id" />
    <result column="eva_seller" jdbcType="INTEGER" property="sellerId" />
    <result column="eva_buyer" jdbcType="INTEGER" property="buyerId" />
    <result column="eva_buyer_name" jdbcType="VARCHAR" property="buyerName" />
    <result column="eva_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="eva_starlevel" jdbcType="INTEGER" property="star" />
    <result column="eva_img" jdbcType="VARCHAR" property="imgURL" />
    <!--少了response ???  -->
    <!-- ssssss -->
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="zm.village.dao.Evaluate">
    <result column="eva_content" jdbcType="LONGVARCHAR" property="content" />
    <result column="eva_response" jdbcType="LONGVARCHAR" property="response" />
  </resultMap>
  <sql id="Base_Column_List">
    eva_id, eva_seller, eva_buyer, eva_buyer_name, eva_time, eva_starlevel, eva_img
  </sql>
  <sql id="Blob_Column_List">
    eva_content, eva_response
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from eva_inf
    where eva_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eva_inf
    where eva_id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zm.village.dao.Evaluate">
    insert into eva_inf (eva_id, eva_seller, eva_buyer, 
      eva_buyer_name, eva_time, eva_starlevel, 
      eva_img, eva_content, eva_response
      )
    values (#{id,jdbcType=INTEGER}, #{sellerId,jdbcType=INTEGER}, #{buyerId,jdbcType=INTEGER}, 
      #{buyerName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{star,jdbcType=INTEGER}, 
      #{imgURL,jdbcType=VARCHAR}, #{content,jdbcType=LONGVARCHAR}, #{response,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="zm.village.dao.Evaluate">
    insert into eva_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        eva_id,
      </if>
      <if test="sellerId != null">
        eva_seller,
      </if>
      <if test="buyerId != null">
        eva_buyer,
      </if>
      <if test="buyerName != null">
        eva_buyer_name,
      </if>
      <if test="createTime != null">
        eva_time,
      </if>
      <if test="star != null">
        eva_starlevel,
      </if>
      <if test="imgURL != null">
        eva_img,
      </if>
      <if test="content != null">
        eva_content,
      </if>
      <if test="response != null">
        eva_response,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="sellerId != null">
        #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null">
        #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="buyerName != null">
        #{buyerName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="star != null">
        #{star,jdbcType=INTEGER},
      </if>
      <if test="imgURL != null">
        #{imgURL,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="response != null">
        #{response,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zm.village.dao.Evaluate">
    update eva_inf
    <set>
      <if test="sellerId != null">
        eva_seller = #{sellerId,jdbcType=INTEGER},
      </if>
      <if test="buyerId != null">
        eva_buyer = #{buyerId,jdbcType=INTEGER},
      </if>
      <if test="buyerName != null">
        eva_buyer_name = #{buyerName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null">
        eva_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="star != null">
        eva_starlevel = #{star,jdbcType=INTEGER},
      </if>
      <if test="imgURL != null">
        eva_img = #{imgURL,jdbcType=VARCHAR},
      </if>
      <if test="content != null">
        eva_content = #{content,jdbcType=LONGVARCHAR},
      </if>
      <if test="response != null">
        eva_response = #{response,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where eva_id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="zm.village.dao.Evaluate">
    update eva_inf
    set eva_seller = #{sellerId,jdbcType=INTEGER},
      eva_buyer = #{buyerId,jdbcType=INTEGER},
      eva_buyer_name = #{buyerName,jdbcType=VARCHAR},
      eva_time = #{createTime,jdbcType=TIMESTAMP},
      eva_starlevel = #{star,jdbcType=INTEGER},
      eva_img = #{imgURL,jdbcType=VARCHAR},
      eva_content = #{content,jdbcType=LONGVARCHAR},
      eva_response = #{response,jdbcType=LONGVARCHAR}
    where eva_id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zm.village.dao.Evaluate">
    update eva_inf
    set eva_seller = #{sellerId,jdbcType=INTEGER},
      eva_buyer = #{buyerId,jdbcType=INTEGER},
      eva_buyer_name = #{buyerName,jdbcType=VARCHAR},
      eva_time = #{createTime,jdbcType=TIMESTAMP},
      eva_starlevel = #{star,jdbcType=INTEGER},
      eva_img = #{imgURL,jdbcType=VARCHAR}
    where eva_id = #{id,jdbcType=INTEGER}
  </update>
</mapper>