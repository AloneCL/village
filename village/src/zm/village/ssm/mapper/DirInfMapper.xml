<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zm.village.ssm.mapper.DirInfMapper">
  <resultMap id="BaseResultMap" type="zm.village.dao.Dictionary">
    <id column="dir_id" jdbcType="INTEGER" property="id" />
    <result column="dir_type" jdbcType="INTEGER" property="type" />
    <result column="dir_name" jdbcType="VARCHAR" property="name" />
    <!--是不是少了introduce ??  -->
    <result column="dir_img" jdbcType="VARCHAR" property="dirImg" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="zm.village.dao.Dictionary">
    <result column="dir_introduce" jdbcType="LONGVARCHAR" property="dirIntroduce" />
  </resultMap>
  <sql id="Base_Column_List">
    dir_id, dir_type, dir_name, dir_img
  </sql>
  <sql id="Blob_Column_List">
    dir_introduce
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from dir_inf
    where dir_id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from dir_inf
    where dir_id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zm.village.dao.Dictionary">
    insert into dir_inf (dir_id, dir_type, dir_name, 
      dir_img, dir_introduce)
    values (#{id,jdbcType=INTEGER}, #{type,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, 
      #{dirImg,jdbcType=VARCHAR}, #{dirIntroduce,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="zm.village.dao.Dictionary">
    insert into dir_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        dir_id,
      </if>
      <if test="type != null">
        dir_type,
      </if>
      <if test="name != null">
        dir_name,
      </if>
      <if test="dirImg != null">
        dir_img,
      </if>
      <if test="dirIntroduce != null">
        dir_introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="dirImg != null">
        #{dirImg,jdbcType=VARCHAR},
      </if>
      <if test="dirIntroduce != null">
        #{dirIntroduce,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zm.village.dao.Dictionary">
    update dir_inf
    <set>
      <if test="type != null">
        dir_type = #{type,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        dir_name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="dirImg != null">
        dir_img = #{dirImg,jdbcType=VARCHAR},
      </if>
      <if test="dirIntroduce != null">
        dir_introduce = #{dirIntroduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where dir_id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="zm.village.dao.Dictionary">
    update dir_inf
    set dir_type = #{type,jdbcType=INTEGER},
      dir_name = #{name,jdbcType=VARCHAR},
      dir_img = #{dirImg,jdbcType=VARCHAR},
      dir_introduce = #{dirIntroduce,jdbcType=LONGVARCHAR}
    where dir_id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zm.village.dao.Dictionary">
    update dir_inf
    set dir_type = #{type,jdbcType=INTEGER},
      dir_name = #{name,jdbcType=VARCHAR},
      dir_img = #{imgURL,jdbcType=VARCHAR}
    where dir_id = #{id,jdbcType=INTEGER}
  </update>
</mapper>