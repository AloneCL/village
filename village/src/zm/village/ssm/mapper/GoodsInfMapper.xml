<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zm.village.ssm.mapper.GoodsInfMapper">
  <resultMap id="BaseResultMap" type="zm.village.dao.GoodsInf">
    <id column="goods_id" jdbcType="INTEGER" property="goodsId" />
    <result column="goods_name" jdbcType="VARCHAR" property="goodsName" />
    <result column="goods_price" jdbcType="DOUBLE" property="goodsPrice" />
    <result column="goods_post" jdbcType="INTEGER" property="goodsPost" />
    <result column="goods_address" jdbcType="VARCHAR" property="goodsAddress" />
    <result column="goods_img" jdbcType="VARCHAR" property="goodsImg" />
    <result column="goods_user" jdbcType="INTEGER" property="goodsUser" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="zm.village.dao.GoodsInf">
    <result column="goods_introduce" jdbcType="LONGVARCHAR" property="goodsIntroduce" />
  </resultMap>
  <sql id="Base_Column_List">
    goods_id, goods_name, goods_price, goods_post, goods_address, goods_img, goods_user
  </sql>
  <sql id="Blob_Column_List">
    goods_introduce
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from goods_inf
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from goods_inf
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zm.village.dao.GoodsInf">
    insert into goods_inf (goods_id, goods_name, goods_price, 
      goods_post, goods_address, goods_img, 
      goods_user, goods_introduce)
    values (#{goodsId,jdbcType=INTEGER}, #{goodsName,jdbcType=VARCHAR}, #{goodsPrice,jdbcType=DOUBLE}, 
      #{goodsPost,jdbcType=INTEGER}, #{goodsAddress,jdbcType=VARCHAR}, #{goodsImg,jdbcType=VARCHAR}, 
      #{goodsUser,jdbcType=INTEGER}, #{goodsIntroduce,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="zm.village.dao.GoodsInf">
    insert into goods_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        goods_id,
      </if>
      <if test="goodsName != null">
        goods_name,
      </if>
      <if test="goodsPrice != null">
        goods_price,
      </if>
      <if test="goodsPost != null">
        goods_post,
      </if>
      <if test="goodsAddress != null">
        goods_address,
      </if>
      <if test="goodsImg != null">
        goods_img,
      </if>
      <if test="goodsUser != null">
        goods_user,
      </if>
      <if test="goodsIntroduce != null">
        goods_introduce,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
      <if test="goodsName != null">
        #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodsPost != null">
        #{goodsPost,jdbcType=INTEGER},
      </if>
      <if test="goodsAddress != null">
        #{goodsAddress,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsUser != null">
        #{goodsUser,jdbcType=INTEGER},
      </if>
      <if test="goodsIntroduce != null">
        #{goodsIntroduce,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zm.village.dao.GoodsInf">
    update goods_inf
    <set>
      <if test="goodsName != null">
        goods_name = #{goodsName,jdbcType=VARCHAR},
      </if>
      <if test="goodsPrice != null">
        goods_price = #{goodsPrice,jdbcType=DOUBLE},
      </if>
      <if test="goodsPost != null">
        goods_post = #{goodsPost,jdbcType=INTEGER},
      </if>
      <if test="goodsAddress != null">
        goods_address = #{goodsAddress,jdbcType=VARCHAR},
      </if>
      <if test="goodsImg != null">
        goods_img = #{goodsImg,jdbcType=VARCHAR},
      </if>
      <if test="goodsUser != null">
        goods_user = #{goodsUser,jdbcType=INTEGER},
      </if>
      <if test="goodsIntroduce != null">
        goods_introduce = #{goodsIntroduce,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="zm.village.dao.GoodsInf">
    update goods_inf
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DOUBLE},
      goods_post = #{goodsPost,jdbcType=INTEGER},
      goods_address = #{goodsAddress,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      goods_user = #{goodsUser,jdbcType=INTEGER},
      goods_introduce = #{goodsIntroduce,jdbcType=LONGVARCHAR}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zm.village.dao.GoodsInf">
    update goods_inf
    set goods_name = #{goodsName,jdbcType=VARCHAR},
      goods_price = #{goodsPrice,jdbcType=DOUBLE},
      goods_post = #{goodsPost,jdbcType=INTEGER},
      goods_address = #{goodsAddress,jdbcType=VARCHAR},
      goods_img = #{goodsImg,jdbcType=VARCHAR},
      goods_user = #{goodsUser,jdbcType=INTEGER}
    where goods_id = #{goodsId,jdbcType=INTEGER}
  </update>
</mapper>