<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zm.village.web.mapper.UserAddressMapper">
  <resultMap id="BaseResultMap" type="zm.village.dao.UserAddress">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
     <result column="user_address_name" jdbcType="VARCHAR" property="name" />
    <result column="user_address_tel" jdbcType="VARCHAR" property="telephone" />
    <result column="user_address_province" jdbcType="VARCHAR" property="userAddressProvince" />
    <result column="user_address_city" jdbcType="VARCHAR" property="city" />
    <result column="user_address_district" jdbcType="VARCHAR" property="district" />
    <result column="user_address_address" jdbcType="VARCHAR" property="address" />
  </resultMap>
  <sql id="Base_Column_List">
    id, userId,user_address_name, user_address_tel, user_address_province, user_address_city, user_address_district, 
    user_address_address
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_address
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="getByUser" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user_address
    where userId = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user_address
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="zm.village.dao.UserAddress">
    insert into user_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="name != null">
        user_address_name,
      </if>
      <if test="telephone != null">
        user_address_tel,
      </if>
      <if test="userAddressProvince != null">
        user_address_province,
      </if>
      <if test="city != null">
        user_address_city,
      </if>
      <if test="district != null">
        user_address_district,
      </if>
      <if test="address != null">
        user_address_address,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="userAddressProvince != null">
        #{userAddressProvince,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        #{district,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zm.village.dao.UserAddress">
    update user_address
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
       <if test="name != null">
        user_address_name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null">
        user_address_tel = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="userAddressProvince != null">
        user_address_province = #{userAddressProvince,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        user_address_city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="district != null">
        user_address_district = #{district,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        user_address_address = #{address,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>