<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zm.village.mapper.CollectMapper">
  <resultMap id="BaseResultMap" type="zm.village.dao.Collect">
    <id column="collect_id" jdbcType="INTEGER" property="id" />
    <result column="collect_user" jdbcType="INTEGER" property="userId" />
    <result column="collect_time" jdbcType="TIMESTAMP" property="time" />
    <result column="collect_type" jdbcType="INTEGER" property="type" />
    <result column="collect_land" jdbcType="INTEGER" property="landId" />
    <result column="collect_goods" jdbcType="INTEGER" property="goodsId" />
  </resultMap>
  <sql id="Base_Column_List">
    collect_id, collect_user, collect_time, collect_type, collect_land, collect_goods
  </sql>
  
  <select id="selectAll" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from collect_inf
  </select>
  
  <select id="selectByUserId" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List"/>
    from collect_inf
    where collect_user = #{userid,jdbcType=INTEGER}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from collect_inf
    where collect_id = #{id,jdbcType=INTEGER}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from collect_inf
    where collect_id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insertSelective" parameterType="zm.village.dao.Collect">
    insert into collect_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        collect_user,
      </if>
      <if test="time != null">
        collect_time,
      </if>
      <if test="type != null">
        collect_type,
      </if>
      <if test="landId != null">
        collect_land,
      </if>
      <if test="goodsId != null">
        collect_goods,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="landId != null">
        #{landId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        #{goodsId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zm.village.dao.Collect">
    update collect_inf
    <set>
      <if test="userId != null">
        collect_user = #{userId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        collect_time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="type != null">
        collect_type = #{type,jdbcType=INTEGER},
      </if>
      <if test="landId != null">
        collect_land = #{landId,jdbcType=INTEGER},
      </if>
      <if test="goodsId != null">
        collect_goods = #{goodsId,jdbcType=INTEGER},
      </if>
    </set>
    where collect_id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zm.village.dao.Collect">
    update collect_inf
    set collect_user = #{userId,jdbcType=INTEGER},
      collect_time = #{time,jdbcType=TIMESTAMP},
      collect_type = #{type,jdbcType=INTEGER},
      collect_land = #{landId,jdbcType=INTEGER},
      collect_goods = #{goodsId,jdbcType=INTEGER}
    where collect_id = #{id,jdbcType=INTEGER}
  </update>
</mapper>