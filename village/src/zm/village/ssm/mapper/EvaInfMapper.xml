<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zm.village.ssm.mapper.EvaInfMapper">
  <resultMap id="BaseResultMap" type="zm.village.dao.EvaInf">
    <id column="eva_id" jdbcType="INTEGER" property="evaId" />
    <result column="eva_seller" jdbcType="INTEGER" property="evaSeller" />
    <result column="eva_buyer" jdbcType="INTEGER" property="evaBuyer" />
    <result column="eva_buyer_name" jdbcType="VARCHAR" property="evaBuyerName" />
    <result column="eva_time" jdbcType="TIMESTAMP" property="evaTime" />
    <result column="eva_starlevel" jdbcType="INTEGER" property="evaStarlevel" />
    <result column="eva_img" jdbcType="VARCHAR" property="evaImg" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="zm.village.dao.EvaInfWithBLOBs">
    <result column="eva_content" jdbcType="LONGVARCHAR" property="evaContent" />
    <result column="eva_response" jdbcType="LONGVARCHAR" property="evaResponse" />
  </resultMap>
  <sql id="Base_Column_List">
    eva_id, eva_seller, eva_buyer, eva_buyer_name, eva_time, eva_starlevel, eva_img
  </sql>
  <sql id="Blob_Column_List">
    eva_content, eva_response
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from eva_inf
    where eva_id = #{evaId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from eva_inf
    where eva_id = #{evaId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zm.village.dao.EvaInfWithBLOBs">
    insert into eva_inf (eva_id, eva_seller, eva_buyer, 
      eva_buyer_name, eva_time, eva_starlevel, 
      eva_img, eva_content, eva_response
      )
    values (#{evaId,jdbcType=INTEGER}, #{evaSeller,jdbcType=INTEGER}, #{evaBuyer,jdbcType=INTEGER}, 
      #{evaBuyerName,jdbcType=VARCHAR}, #{evaTime,jdbcType=TIMESTAMP}, #{evaStarlevel,jdbcType=INTEGER}, 
      #{evaImg,jdbcType=VARCHAR}, #{evaContent,jdbcType=LONGVARCHAR}, #{evaResponse,jdbcType=LONGVARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="zm.village.dao.EvaInfWithBLOBs">
    insert into eva_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="evaId != null">
        eva_id,
      </if>
      <if test="evaSeller != null">
        eva_seller,
      </if>
      <if test="evaBuyer != null">
        eva_buyer,
      </if>
      <if test="evaBuyerName != null">
        eva_buyer_name,
      </if>
      <if test="evaTime != null">
        eva_time,
      </if>
      <if test="evaStarlevel != null">
        eva_starlevel,
      </if>
      <if test="evaImg != null">
        eva_img,
      </if>
      <if test="evaContent != null">
        eva_content,
      </if>
      <if test="evaResponse != null">
        eva_response,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="evaId != null">
        #{evaId,jdbcType=INTEGER},
      </if>
      <if test="evaSeller != null">
        #{evaSeller,jdbcType=INTEGER},
      </if>
      <if test="evaBuyer != null">
        #{evaBuyer,jdbcType=INTEGER},
      </if>
      <if test="evaBuyerName != null">
        #{evaBuyerName,jdbcType=VARCHAR},
      </if>
      <if test="evaTime != null">
        #{evaTime,jdbcType=TIMESTAMP},
      </if>
      <if test="evaStarlevel != null">
        #{evaStarlevel,jdbcType=INTEGER},
      </if>
      <if test="evaImg != null">
        #{evaImg,jdbcType=VARCHAR},
      </if>
      <if test="evaContent != null">
        #{evaContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="evaResponse != null">
        #{evaResponse,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zm.village.dao.EvaInfWithBLOBs">
    update eva_inf
    <set>
      <if test="evaSeller != null">
        eva_seller = #{evaSeller,jdbcType=INTEGER},
      </if>
      <if test="evaBuyer != null">
        eva_buyer = #{evaBuyer,jdbcType=INTEGER},
      </if>
      <if test="evaBuyerName != null">
        eva_buyer_name = #{evaBuyerName,jdbcType=VARCHAR},
      </if>
      <if test="evaTime != null">
        eva_time = #{evaTime,jdbcType=TIMESTAMP},
      </if>
      <if test="evaStarlevel != null">
        eva_starlevel = #{evaStarlevel,jdbcType=INTEGER},
      </if>
      <if test="evaImg != null">
        eva_img = #{evaImg,jdbcType=VARCHAR},
      </if>
      <if test="evaContent != null">
        eva_content = #{evaContent,jdbcType=LONGVARCHAR},
      </if>
      <if test="evaResponse != null">
        eva_response = #{evaResponse,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where eva_id = #{evaId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="zm.village.dao.EvaInfWithBLOBs">
    update eva_inf
    set eva_seller = #{evaSeller,jdbcType=INTEGER},
      eva_buyer = #{evaBuyer,jdbcType=INTEGER},
      eva_buyer_name = #{evaBuyerName,jdbcType=VARCHAR},
      eva_time = #{evaTime,jdbcType=TIMESTAMP},
      eva_starlevel = #{evaStarlevel,jdbcType=INTEGER},
      eva_img = #{evaImg,jdbcType=VARCHAR},
      eva_content = #{evaContent,jdbcType=LONGVARCHAR},
      eva_response = #{evaResponse,jdbcType=LONGVARCHAR}
    where eva_id = #{evaId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zm.village.dao.EvaInf">
    update eva_inf
    set eva_seller = #{evaSeller,jdbcType=INTEGER},
      eva_buyer = #{evaBuyer,jdbcType=INTEGER},
      eva_buyer_name = #{evaBuyerName,jdbcType=VARCHAR},
      eva_time = #{evaTime,jdbcType=TIMESTAMP},
      eva_starlevel = #{evaStarlevel,jdbcType=INTEGER},
      eva_img = #{evaImg,jdbcType=VARCHAR}
    where eva_id = #{evaId,jdbcType=INTEGER}
  </update>
</mapper>