<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zm.village.ssm.mapper.OrdersonInfMapper">
  <resultMap id="BaseResultMap" type="zm.village.dao.OrdersonInf">
    <id column="orderson_id" jdbcType="INTEGER" property="ordersonId" />
    <result column="orderson_order" jdbcType="INTEGER" property="ordersonOrder" />
    <result column="orderson_land" jdbcType="INTEGER" property="ordersonLand" />
    <result column="orderson_dir" jdbcType="INTEGER" property="ordersonDir" />
    <result column="orderson_size" jdbcType="DOUBLE" property="ordersonSize" />
    <result column="orderson_price" jdbcType="DOUBLE" property="ordersonPrice" />
    <result column="orderson_status" jdbcType="INTEGER" property="ordersonStatus" />
    <result column="orderson_img" jdbcType="VARCHAR" property="ordersonImg" />
    <result column="orderson_starttime" jdbcType="TIMESTAMP" property="ordersonStarttime" />
    <result column="orderson_expecttime" jdbcType="TIMESTAMP" property="ordersonExpecttime" />
    <result column="orderson_finishtime" jdbcType="TIMESTAMP" property="ordersonFinishtime" />
  </resultMap>
  <sql id="Base_Column_List">
    orderson_id, orderson_order, orderson_land, orderson_dir, orderson_size, orderson_price, 
    orderson_status, orderson_img, orderson_starttime, orderson_expecttime, orderson_finishtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from orderson_inf
    where orderson_id = #{ordersonId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from orderson_inf
    where orderson_id = #{ordersonId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zm.village.dao.OrdersonInf">
    insert into orderson_inf (orderson_id, orderson_order, orderson_land, 
      orderson_dir, orderson_size, orderson_price, 
      orderson_status, orderson_img, orderson_starttime, 
      orderson_expecttime, orderson_finishtime
      )
    values (#{ordersonId,jdbcType=INTEGER}, #{ordersonOrder,jdbcType=INTEGER}, #{ordersonLand,jdbcType=INTEGER}, 
      #{ordersonDir,jdbcType=INTEGER}, #{ordersonSize,jdbcType=DOUBLE}, #{ordersonPrice,jdbcType=DOUBLE}, 
      #{ordersonStatus,jdbcType=INTEGER}, #{ordersonImg,jdbcType=VARCHAR}, #{ordersonStarttime,jdbcType=TIMESTAMP}, 
      #{ordersonExpecttime,jdbcType=TIMESTAMP}, #{ordersonFinishtime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="zm.village.dao.OrdersonInf">
    insert into orderson_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="ordersonId != null">
        orderson_id,
      </if>
      <if test="ordersonOrder != null">
        orderson_order,
      </if>
      <if test="ordersonLand != null">
        orderson_land,
      </if>
      <if test="ordersonDir != null">
        orderson_dir,
      </if>
      <if test="ordersonSize != null">
        orderson_size,
      </if>
      <if test="ordersonPrice != null">
        orderson_price,
      </if>
      <if test="ordersonStatus != null">
        orderson_status,
      </if>
      <if test="ordersonImg != null">
        orderson_img,
      </if>
      <if test="ordersonStarttime != null">
        orderson_starttime,
      </if>
      <if test="ordersonExpecttime != null">
        orderson_expecttime,
      </if>
      <if test="ordersonFinishtime != null">
        orderson_finishtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="ordersonId != null">
        #{ordersonId,jdbcType=INTEGER},
      </if>
      <if test="ordersonOrder != null">
        #{ordersonOrder,jdbcType=INTEGER},
      </if>
      <if test="ordersonLand != null">
        #{ordersonLand,jdbcType=INTEGER},
      </if>
      <if test="ordersonDir != null">
        #{ordersonDir,jdbcType=INTEGER},
      </if>
      <if test="ordersonSize != null">
        #{ordersonSize,jdbcType=DOUBLE},
      </if>
      <if test="ordersonPrice != null">
        #{ordersonPrice,jdbcType=DOUBLE},
      </if>
      <if test="ordersonStatus != null">
        #{ordersonStatus,jdbcType=INTEGER},
      </if>
      <if test="ordersonImg != null">
        #{ordersonImg,jdbcType=VARCHAR},
      </if>
      <if test="ordersonStarttime != null">
        #{ordersonStarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordersonExpecttime != null">
        #{ordersonExpecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordersonFinishtime != null">
        #{ordersonFinishtime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zm.village.dao.OrdersonInf">
    update orderson_inf
    <set>
      <if test="ordersonOrder != null">
        orderson_order = #{ordersonOrder,jdbcType=INTEGER},
      </if>
      <if test="ordersonLand != null">
        orderson_land = #{ordersonLand,jdbcType=INTEGER},
      </if>
      <if test="ordersonDir != null">
        orderson_dir = #{ordersonDir,jdbcType=INTEGER},
      </if>
      <if test="ordersonSize != null">
        orderson_size = #{ordersonSize,jdbcType=DOUBLE},
      </if>
      <if test="ordersonPrice != null">
        orderson_price = #{ordersonPrice,jdbcType=DOUBLE},
      </if>
      <if test="ordersonStatus != null">
        orderson_status = #{ordersonStatus,jdbcType=INTEGER},
      </if>
      <if test="ordersonImg != null">
        orderson_img = #{ordersonImg,jdbcType=VARCHAR},
      </if>
      <if test="ordersonStarttime != null">
        orderson_starttime = #{ordersonStarttime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordersonExpecttime != null">
        orderson_expecttime = #{ordersonExpecttime,jdbcType=TIMESTAMP},
      </if>
      <if test="ordersonFinishtime != null">
        orderson_finishtime = #{ordersonFinishtime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where orderson_id = #{ordersonId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zm.village.dao.OrdersonInf">
    update orderson_inf
    set orderson_order = #{ordersonOrder,jdbcType=INTEGER},
      orderson_land = #{ordersonLand,jdbcType=INTEGER},
      orderson_dir = #{ordersonDir,jdbcType=INTEGER},
      orderson_size = #{ordersonSize,jdbcType=DOUBLE},
      orderson_price = #{ordersonPrice,jdbcType=DOUBLE},
      orderson_status = #{ordersonStatus,jdbcType=INTEGER},
      orderson_img = #{ordersonImg,jdbcType=VARCHAR},
      orderson_starttime = #{ordersonStarttime,jdbcType=TIMESTAMP},
      orderson_expecttime = #{ordersonExpecttime,jdbcType=TIMESTAMP},
      orderson_finishtime = #{ordersonFinishtime,jdbcType=TIMESTAMP}
    where orderson_id = #{ordersonId,jdbcType=INTEGER}
  </update>
</mapper>