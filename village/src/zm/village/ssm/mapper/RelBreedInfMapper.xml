<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="zm.village.ssm.mapper.RelBreedInfMapper">
  <resultMap id="BaseResultMap" type="zm.village.dao.RelBreedInf">
    <id column="rel_breed_id" jdbcType="INTEGER" property="relBreedId" />
    <result column="rel_breed_type" jdbcType="INTEGER" property="relBreedType" />
    <result column="rel_breed_land" jdbcType="INTEGER" property="relBreedLand" />
    <result column="rel_breed_price" jdbcType="DOUBLE" property="relBreedPrice" />
    <result column="rel_breed_min_weight" jdbcType="DOUBLE" property="relBreedMinWeight" />
    <result column="rel_breed_max_weight" jdbcType="DOUBLE" property="relBreedMaxWeight" />
  </resultMap>
  <sql id="Base_Column_List">
    rel_breed_id, rel_breed_type, rel_breed_land, rel_breed_price, rel_breed_min_weight, 
    rel_breed_max_weight
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from rel_breed_inf
    where rel_breed_id = #{relBreedId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from rel_breed_inf
    where rel_breed_id = #{relBreedId,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="zm.village.dao.RelBreedInf">
    insert into rel_breed_inf (rel_breed_id, rel_breed_type, rel_breed_land, 
      rel_breed_price, rel_breed_min_weight, rel_breed_max_weight
      )
    values (#{relBreedId,jdbcType=INTEGER}, #{relBreedType,jdbcType=INTEGER}, #{relBreedLand,jdbcType=INTEGER}, 
      #{relBreedPrice,jdbcType=DOUBLE}, #{relBreedMinWeight,jdbcType=DOUBLE}, #{relBreedMaxWeight,jdbcType=DOUBLE}
      )
  </insert>
  <insert id="insertSelective" parameterType="zm.village.dao.RelBreedInf">
    insert into rel_breed_inf
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="relBreedId != null">
        rel_breed_id,
      </if>
      <if test="relBreedType != null">
        rel_breed_type,
      </if>
      <if test="relBreedLand != null">
        rel_breed_land,
      </if>
      <if test="relBreedPrice != null">
        rel_breed_price,
      </if>
      <if test="relBreedMinWeight != null">
        rel_breed_min_weight,
      </if>
      <if test="relBreedMaxWeight != null">
        rel_breed_max_weight,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="relBreedId != null">
        #{relBreedId,jdbcType=INTEGER},
      </if>
      <if test="relBreedType != null">
        #{relBreedType,jdbcType=INTEGER},
      </if>
      <if test="relBreedLand != null">
        #{relBreedLand,jdbcType=INTEGER},
      </if>
      <if test="relBreedPrice != null">
        #{relBreedPrice,jdbcType=DOUBLE},
      </if>
      <if test="relBreedMinWeight != null">
        #{relBreedMinWeight,jdbcType=DOUBLE},
      </if>
      <if test="relBreedMaxWeight != null">
        #{relBreedMaxWeight,jdbcType=DOUBLE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="zm.village.dao.RelBreedInf">
    update rel_breed_inf
    <set>
      <if test="relBreedType != null">
        rel_breed_type = #{relBreedType,jdbcType=INTEGER},
      </if>
      <if test="relBreedLand != null">
        rel_breed_land = #{relBreedLand,jdbcType=INTEGER},
      </if>
      <if test="relBreedPrice != null">
        rel_breed_price = #{relBreedPrice,jdbcType=DOUBLE},
      </if>
      <if test="relBreedMinWeight != null">
        rel_breed_min_weight = #{relBreedMinWeight,jdbcType=DOUBLE},
      </if>
      <if test="relBreedMaxWeight != null">
        rel_breed_max_weight = #{relBreedMaxWeight,jdbcType=DOUBLE},
      </if>
    </set>
    where rel_breed_id = #{relBreedId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="zm.village.dao.RelBreedInf">
    update rel_breed_inf
    set rel_breed_type = #{relBreedType,jdbcType=INTEGER},
      rel_breed_land = #{relBreedLand,jdbcType=INTEGER},
      rel_breed_price = #{relBreedPrice,jdbcType=DOUBLE},
      rel_breed_min_weight = #{relBreedMinWeight,jdbcType=DOUBLE},
      rel_breed_max_weight = #{relBreedMaxWeight,jdbcType=DOUBLE}
    where rel_breed_id = #{relBreedId,jdbcType=INTEGER}
  </update>
</mapper>